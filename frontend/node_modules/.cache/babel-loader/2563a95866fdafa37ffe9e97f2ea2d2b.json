{"ast":null,"code":"var _jsxFileName = \"/home/bigcubecat/Projects/musli/src/components/Player/Playlist.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Row from './Row';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst loadData = function () {\n  let limit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 10;\n  let page = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  return fetch(`https://jsonplaceholder.typicode.com/posts?_limit=${limit}&page=${page}`).then(res => res.json()).then(json => json).catch(console.error);\n};\n\nexport default function Playlist() {\n  _s();\n\n  // TODO: Сделать получение выбранного цвета из контекста\n  // TODO: При нажатии на элемент отправлять его Row в Player\n  const [musicList, setMusicList] = React.useState([]);\n  React.useEffect(() => {\n    const newData = loadData();\n    setMusicList(newData);\n  }, []);\n  console.log(musicList);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"List\",\n    children: musicList.map(song => /*#__PURE__*/_jsxDEV(Row, {\n      song: song\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 30\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Playlist, \"OMcUgSd/CMqLJozLWk4ZZlVoFpA=\");\n\n_c = Playlist;\n\nvar _c;\n\n$RefreshReg$(_c, \"Playlist\");","map":{"version":3,"names":["React","Row","loadData","limit","page","fetch","then","res","json","catch","console","error","Playlist","musicList","setMusicList","useState","useEffect","newData","log","map","song"],"sources":["/home/bigcubecat/Projects/musli/src/components/Player/Playlist.js"],"sourcesContent":["import React from \"react\";\nimport Row from './Row';\n\nconst loadData = (limit = 10, page = 1) => {\n  return fetch(`https://jsonplaceholder.typicode.com/posts?_limit=${limit}&page=${page}`)\n    .then(res => res.json()).\n    then(json => json)\n    .catch(console.error);\n}\n\nexport default function Playlist() {\n  // TODO: Сделать получение выбранного цвета из контекста\n  // TODO: При нажатии на элемент отправлять его Row в Player\n  const [musicList, setMusicList] = React.useState([]);\n\n  React.useEffect(() => {\n    const newData = loadData();\n    setMusicList(newData)\n  }, [])\n  console.log(musicList)\n  return (\n    <div className=\"List\">\n      {musicList.map(song => <Row song={song} />)}\n    </div>\n  )\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,OAAhB;;;AAEA,MAAMC,QAAQ,GAAG,YAA0B;EAAA,IAAzBC,KAAyB,uEAAjB,EAAiB;EAAA,IAAbC,IAAa,uEAAN,CAAM;EACzC,OAAOC,KAAK,CAAE,qDAAoDF,KAAM,SAAQC,IAAK,EAAzE,CAAL,CACJE,IADI,CACCC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADR,EAELF,IAFK,CAEAE,IAAI,IAAIA,IAFR,EAGJC,KAHI,CAGEC,OAAO,CAACC,KAHV,CAAP;AAID,CALD;;AAOA,eAAe,SAASC,QAAT,GAAoB;EAAA;;EACjC;EACA;EACA,MAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bd,KAAK,CAACe,QAAN,CAAe,EAAf,CAAlC;EAEAf,KAAK,CAACgB,SAAN,CAAgB,MAAM;IACpB,MAAMC,OAAO,GAAGf,QAAQ,EAAxB;IACAY,YAAY,CAACG,OAAD,CAAZ;EACD,CAHD,EAGG,EAHH;EAIAP,OAAO,CAACQ,GAAR,CAAYL,SAAZ;EACA,oBACE;IAAK,SAAS,EAAC,MAAf;IAAA,UACGA,SAAS,CAACM,GAAV,CAAcC,IAAI,iBAAI,QAAC,GAAD;MAAK,IAAI,EAAEA;IAAX;MAAA;MAAA;MAAA;IAAA,QAAtB;EADH;IAAA;IAAA;IAAA;EAAA,QADF;AAKD;;GAfuBR,Q;;KAAAA,Q"},"metadata":{},"sourceType":"module"}