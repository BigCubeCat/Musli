[{"/home/bigcubecat/Projects/musli/frontend/src/index.js":"1","/home/bigcubecat/Projects/musli/frontend/src/App.js":"2","/home/bigcubecat/Projects/musli/frontend/src/reportWebVitals.js":"3","/home/bigcubecat/Projects/musli/frontend/src/AppContext.js":"4","/home/bigcubecat/Projects/musli/frontend/src/components/Player/Player.js":"5","/home/bigcubecat/Projects/musli/frontend/src/components/Main/Main.js":"6","/home/bigcubecat/Projects/musli/frontend/src/components/Header/Header.js":"7","/home/bigcubecat/Projects/musli/frontend/src/components/ColorPicker/Colors.js":"8","/home/bigcubecat/Projects/musli/frontend/src/components/Player/Playlist.js":"9","/home/bigcubecat/Projects/musli/frontend/src/components/Player/Row.js":"10","/home/bigcubecat/Projects/musli/frontend/src/components/ColorPicker/Picker.js":"11","/home/bigcubecat/Projects/musli/frontend/src/components/Player/Progress.js":"12"},{"size":535,"mtime":1660104694343,"results":"13","hashOfConfig":"14"},{"size":404,"mtime":1660122687324,"results":"15","hashOfConfig":"14"},{"size":362,"mtime":1660104694343,"results":"16","hashOfConfig":"14"},{"size":1100,"mtime":1660109841031,"results":"17","hashOfConfig":"14"},{"size":2242,"mtime":1660405774904,"results":"18","hashOfConfig":"14"},{"size":239,"mtime":1660212430597,"results":"19","hashOfConfig":"14"},{"size":252,"mtime":1660207981413,"results":"20","hashOfConfig":"14"},{"size":284,"mtime":1660120939881,"results":"21","hashOfConfig":"14"},{"size":921,"mtime":1660213745990,"results":"22","hashOfConfig":"14"},{"size":354,"mtime":1660216147009,"results":"23","hashOfConfig":"14"},{"size":1533,"mtime":1660121459670,"results":"24","hashOfConfig":"14"},{"size":1063,"mtime":1660406468227,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"pvn3b5",{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"29"},{"filePath":"49","messages":"50","suppressedMessages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":"55","usedDeprecatedRules":"29"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"29"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"29"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/bigcubecat/Projects/musli/frontend/src/index.js",[],[],[],"/home/bigcubecat/Projects/musli/frontend/src/App.js",[],[],"/home/bigcubecat/Projects/musli/frontend/src/reportWebVitals.js",[],[],"/home/bigcubecat/Projects/musli/frontend/src/AppContext.js",[],[],"/home/bigcubecat/Projects/musli/frontend/src/components/Player/Player.js",["67","68","69","70","71","72"],[],"/home/bigcubecat/Projects/musli/frontend/src/components/Main/Main.js",[],[],"/home/bigcubecat/Projects/musli/frontend/src/components/Header/Header.js",["73"],[],"import React from 'react';\n\n\nexport default function Header() {\n  return (\n    <header>\n      <div className=\"head\">\n        <h2>Musli</h2>\n        <button onClick={() => { console.log(\"press\") }}><a>login</a></button>\n      </div>\n    </header>\n  )\n}\n","/home/bigcubecat/Projects/musli/frontend/src/components/ColorPicker/Colors.js",[],[],"/home/bigcubecat/Projects/musli/frontend/src/components/Player/Playlist.js",["74"],[],"import React from \"react\";\nimport Row from './Row';\n\nconst loadData = (limit = 10, page = 1) => {\n  return fetch(`https://jsonplaceholder.typicode.com/posts?_limit=${limit}&page=${page}`)\n    .then(res => res.json()).\n    then(json => json)\n    .catch(console.error);\n}\n\nexport default function Playlist() {\n  // TODO: Сделать получение выбранного цвета из контекста\n  // TODO: При нажатии на элемент отправлять его Row в Player\n  const [musicList, setMusicList] = React.useState([]);\n\n  React.useEffect(() => {\n    const fetchRequest = async () => {\n      const newData = await loadData()\n      console.log('here')\n      console.log(newData)\n      setMusicList(newData)\n    }\n    fetchRequest().catch(console.error)\n  }, [])\n  return (\n    <div className=\"List\">\n      {musicList.map(song => <Row key={song.id} song={song} />)}\n    </div>\n  )\n}\n","/home/bigcubecat/Projects/musli/frontend/src/components/Player/Row.js",["75","76","77"],[],"import React from \"react\";\n\nexport default function Row({ song }) {\n  return (\n    <div key={song.id} className=\"Song\">\n      <div className=\"Controls\">\n        <button><img src=\"/icons/previous.svg\" /></button>\n        <button><img src=\"/icons/pause.svg\" /></button>\n        <button><img src=\"/icons/next.svg\" /></button>\n      </div>\n    </div>\n  )\n}\n\n","/home/bigcubecat/Projects/musli/frontend/src/components/ColorPicker/Picker.js",["78"],[],"import React from \"react\";\n\nexport const BUTTON_COLORS = [  // Основанно на тесте Люшера\n  '#f22f23',\n  '#1e9773',\n  '#004984',\n  '#f2de00',\n  '#231f21',\n  '#99938f',\n  '#d32481',\n  '#c65223',\n];\n\nconst ColorButton = ({ color, index, onClick, selected }) => {\n  return <div className=\"buttonContainer\">\n    <button\n      onClick={onClick}\n      style={{ backgroundColor: color }}\n      className={(selected) ? 'selected' : \"\"}>\n    </button>\n  </div>\n}\n\nexport default function Picker() {\n  const [colors, setColors] = React.useState(BUTTON_COLORS.map(_ => false));\n  const [countSelected, setCountSelected] = React.useState(0);\n\n  const setColor = (index) => {\n    if (countSelected === 2) {\n      const newColors = BUTTON_COLORS.map((_, i) => {\n        return index === i\n      })\n      setColors(newColors);\n      setCountSelected(1);\n      return;\n    }\n    let newCountSelected = 0;\n    const newColors = [];\n    for (let i in colors) {\n      if (index == i) {\n        newColors.push(!colors[i]);\n      } else {\n        newColors.push(colors[i]);\n      }\n      newCountSelected += (newColors[i]) ? 1 : 0\n    }\n    setColors(newColors);\n    setCountSelected(newCountSelected);\n  }\n\n  return (\n    <div className=\"Picker\">\n      {\n        BUTTON_COLORS.map(\n          (color, i) =>\n            <ColorButton\n              key={i}\n              color={color}\n              index={i}\n              onClick={() => setColor(i)}\n              selected={colors[i]}\n            />\n        )\n      }\n    </div>\n  )\n}\n","/home/bigcubecat/Projects/musli/frontend/src/components/Player/Progress.js",["79"],[],{"ruleId":"80","severity":1,"message":"81","line":15,"column":9,"nodeType":"82","messageId":"83","endLine":15,"endColumn":16},{"ruleId":"84","severity":1,"message":"85","line":20,"column":5,"nodeType":"86","endLine":20,"endColumn":14,"suggestions":"87"},{"ruleId":"84","severity":1,"message":"85","line":28,"column":6,"nodeType":"86","endLine":28,"endColumn":8,"suggestions":"88"},{"ruleId":"89","severity":1,"message":"90","line":55,"column":19,"nodeType":"91","endLine":55,"endColumn":52},{"ruleId":"89","severity":1,"message":"90","line":58,"column":12,"nodeType":"91","endLine":58,"endColumn":76},{"ruleId":"89","severity":1,"message":"90","line":60,"column":19,"nodeType":"91","endLine":60,"endColumn":48},{"ruleId":"92","severity":1,"message":"93","line":9,"column":58,"nodeType":"91","endLine":9,"endColumn":61},{"ruleId":"94","severity":1,"message":"95","line":6,"column":29,"nodeType":"96","messageId":"97","endLine":6,"endColumn":30,"fix":"98"},{"ruleId":"89","severity":1,"message":"90","line":7,"column":17,"nodeType":"91","endLine":7,"endColumn":50},{"ruleId":"89","severity":1,"message":"90","line":8,"column":17,"nodeType":"91","endLine":8,"endColumn":47},{"ruleId":"89","severity":1,"message":"90","line":9,"column":17,"nodeType":"91","endLine":9,"endColumn":46},{"ruleId":"99","severity":1,"message":"100","line":40,"column":17,"nodeType":"101","messageId":"102","endLine":40,"endColumn":19},{"ruleId":"84","severity":1,"message":"103","line":22,"column":6,"nodeType":"86","endLine":22,"endColumn":8,"suggestions":"104"},"no-unused-vars","'getTime' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'audio'. Either include it or remove the dependency array.","ArrayExpression",["105"],["106"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"107","text":"108"},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'audio.currentTime' and 'audio.duration'. Either include them or remove the dependency array. If 'setTimePercent' needs the current value of 'audio.currentTime', you can also switch to useReducer instead of useState and read 'audio.currentTime' in the reducer.",["109"],{"desc":"110","fix":"111"},{"desc":"112","fix":"113"},[216,222],"\n    .",{"desc":"114","fix":"115"},"Update the dependencies array to be: [audio, playing]",{"range":"116","text":"117"},"Update the dependencies array to be: [audio]",{"range":"118","text":"119"},"Update the dependencies array to be: [audio.currentTime, audio.duration]",{"range":"120","text":"121"},[559,568],"[audio, playing]",[755,757],"[audio]",[621,623],"[audio.currentTime, audio.duration]"]